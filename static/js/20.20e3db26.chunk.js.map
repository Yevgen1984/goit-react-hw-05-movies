{"version":3,"file":"static/js/20.20e3db26.chunk.js","mappings":"qRAEaA,EAAOC,EAAAA,GAAAA,KAAH,gFAKJC,EAASD,EAAAA,GAAAA,OAAH,0SACR,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAAnB,IACU,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UAAnB,IAII,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,SAAZ,IACA,SAAAL,GAAC,OAAIA,EAAEC,MAAMI,SAAZ,IACP,SAAAL,GAAC,OAAIA,EAAEC,MAAMI,SAAZ,IAEV,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,IACU,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,KAAnB,IACP,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,KAAZ,IAINC,EAAQX,EAAAA,GAAAA,MAAH,4GACP,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,IAAnB,IACU,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,UAAnB,IAEF,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,MAAnB,I,SCxBTK,EAAY,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAG1C,OACE,0BACE,UAACjB,EAAD,CAAMkB,SAAUD,EAAhB,WACE,SAACL,EAAD,CAAOO,KAAK,OAAOC,KAAK,SAASL,MAAOA,EAAOC,QAASA,KACxD,SAACd,EAAD,yBAKP,E,SCyED,EAlFe,WAAO,IAAD,EACbmB,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCL,EAAAA,EAAAA,UAAS,IAA/C,eAAOM,EAAP,KAAoBC,EAApB,KACA,GAAkCP,EAAAA,EAAAA,WAAS,GAA3C,eAAOQ,EAAP,KAAkBC,EAAlB,KACA,GAA0BT,EAAAA,EAAAA,UAAS,MAAnC,eAAOU,EAAP,KAAcC,EAAd,KACMC,EAAW,UAAGR,EAAaS,IAAI,sBAApB,QAAsC,IAEvDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMH,GAAN,8EAChBH,GAAa,GADG,kBAGeO,EAAAA,EAAAA,mBAA6BJ,GAH5C,WAGRK,EAHQ,QAKMC,OALN,sBAMN,IAAIC,MAAM,SANJ,OAQdjB,EAAUe,GARI,kDAUdN,EAAS,KAAMS,SAVD,yBAYdX,GAAa,GAZC,6EAAH,sDAgBXG,GACFG,EAAUH,EAEb,GAAE,CAACA,IAuBJ,OACE,iCACE,SAACrB,EAAD,CACEC,MAAOc,EAEPb,QAfU,SAAA4B,GACdd,EAAec,EAAEC,OAAO9B,MACzB,EAcKE,aA3Be,SAAA6B,GACnBA,EAAMC,iBACNnB,EAAgB,CAAEC,YAAAA,IAClBJ,EAAU,IACVS,EAAS,KACV,IAwBIH,IAAa,SAACiB,EAAA,EAAD,IACbf,IACC,6GAKDT,EAAOiB,OAAS,IACf,wBACGjB,EAAOyB,KAAI,SAAAC,GAAK,eACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMjC,GAAxC,6BACG6B,EAAMK,qBADT,QAC0BL,EAAMM,aADhC,QACyCN,EAAM9B,QAFxC8B,EAAME,GADA,QAW1B,C","sources":["components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.jsx","Pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\nexport const Button = styled.button`\n  color: ${p => p.theme.colors.secondary};\n  background-color: ${p => p.theme.colors.background};\n  border: none;\n  font-size: 16px;\n  padding: 5px 15px;\n  //   transition: color ${p => p.theme.animation},\n  //     background-color ${p => p.theme.animation},\n  //     box-shadow ${p => p.theme.animation};\n  &:hover {\n    color: ${p => p.theme.colors.accent};\n    background-color: ${p => p.theme.colors.muted};\n    box-shadow: ${p => p.theme.white};\n  }\n`;\n\nexport const Input = styled.input`\n  color: ${p => p.theme.colors.text};\n  background-color: ${p => p.theme.colors.background};\n  &:focus {\n    outline-color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { Form, Button, Input } from './SearchMovie.styled';\n\n\nexport const SearchBox = ({ value, onInput, onFormSubmit }) => {\n \n\n  return (\n    <div>\n      <Form onSubmit={onFormSubmit}>\n        <Input type=\"text\" name=\"search\" value={value} onInput={onInput} />\n        <Button>Search</Button>\n      </Form>\n\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { MoviesAPI } from 'servises/MoviesApi';\nimport { SearchBox } from 'components/SearchMovie/SearchMovie';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const filterParam = searchParams.get('searchQuery') ?? '';\n\n  useEffect(() => {\n    const getMovies = async filterParam => {\n      setIsLoading(true);\n      try {\n        const moviesResponse = await MoviesAPI.fetchMovieBySearch(filterParam);\n\n        if (!moviesResponse.length) {\n          throw new Error('Oops!');\n        }\n        setMovies(moviesResponse);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (filterParam) {\n      getMovies(filterParam);\n    }\n  }, [filterParam]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ searchQuery });\n    setMovies([]);\n    setError(null);\n  };\n\n  // const changeFilter = value => {\n  //   setSearchParams(value !== '' ? { filter: value } : {});\n  // };\n\n  const onInput = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  // const visibleMovies = () => {\n  //   return movies.filter(movie =>\n  //     movie.title.toLowerCase().includes(filterParam.toLowerCase())\n  //   );\n  // };\n\n  return (\n    <>\n      <SearchBox\n        value={searchQuery}\n        // onChange={changeFilter}\n        onInput={onInput}\n        onFormSubmit={onFormSubmit}\n      />\n      {isLoading && <Loader />}\n      {error && (\n        <p>\n          Sorry! We didn't find anything on your query! Change search params and\n          try again!\n        </p>\n      )}\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.original_name ?? movie.title ?? movie.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;"],"names":["Form","styled","Button","p","theme","colors","secondary","background","animation","accent","muted","white","Input","text","SearchBox","value","onInput","onFormSubmit","onSubmit","type","name","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","setSearchQuery","isLoading","setIsLoading","error","setError","filterParam","get","useEffect","getMovies","MoviesAPI","moviesResponse","length","Error","message","e","target","event","preventDefault","Loader","map","movie","to","id","state","from","original_name","title"],"sourceRoot":""}